---
title: "My Work"

format: 
  html:
    code-fold: true
    
jupyter: python3
---

Here is some about the things I've been working on ...


# Teaching

I have published all of my course material for GEOS 270 as an Open Educational Resource (OER) on Github.  The syllabus can be found here: <a href="https://geos270.github.io/Syllabus/">https://geos270.github.io/Syllabus/</a>.  The course webpage has links to all of my course content, posted in an openly accessible format.  All content for the term is hyperlinked in the schedule on the course overview page.  I feel this is the most effective, transparent, and accessible way I can provide content for my students.  I find the institutional tools provided by UBC (e.g., Canvas) to be severely lacking in functionality and an obvious barrier to accessibility.  By using Github I can tailor my course webpage as I see fit, prospective students can review this syllabus and other content to see if they might be interested in the course, and students will continue to have access the course content even after they graduate!

I have years of experience teaching GOES 270, all of my available teaching evaluations are posted [here](https://github.com/June-Skeeter/june-skeeter.github.io/tree/main/Evaluations).  The wording of the evaluation questions has changed between terms, but one key question has not changed: **Considering everything, how would you rate this course?**  The chart and table below summarize my student's responses.


::: {.center}

```{python}
#| label: tbl-planets
#| echo: false
#| tbl-cap: "Student repsones to the question: Considering everything, how would you rate this course?"

from IPython.display import Markdown
from tabulate import tabulate
import pandas as pd


Evals = pd.read_csv("Evaluations/Considering_everything_how_would_you_rate_this_course.csv")

Summary = Evals[['Very Poor','Poor','Neutral','Good','Very Good']].sum()
Evals['Response Rate'] = (Evals['n']/Evals['N']).round(2)
# Evals['Favorability'] = Evals[['Good','Very Good']].sum(axis=1)/Summary.sum()
Terms = Evals['N'].count()


Markdown(
  tabulate(
  Evals, 
  headers=Evals.columns.values,showindex=False
))

```

```{python}
#| label: fig-evals
#| echo: false
#| cap-location: margin
#| fig-cap: "Student repsones to the question: Considering everything, how would you rate this course?"

import matplotlib.pyplot as plt

fig,ax = plt.subplots(1,1,figsize=(6,4))
ax.bar(Summary.index,Summary,facecolor='#3248a8',edgecolor='k')
ax.grid(axis='y')
plt.tight_layout()
plt.show()

```

:::